/* Original by Jim Loos. Modified by smbaker for H8 project */

Name io;
Partno G22V10#2;
Revision;
Date 09/1/2023;
Designer Scott Baker;
Company ;
Location ;
Assembly AIM-65 Display IO;
Device G22V10;

/* Inputs: */
Pin 1  = DISPEN;
Pin 2  = A15;
Pin 3  = A14;
Pin 4  = A13;
Pin 5  = A12;
Pin 6  = A11;
Pin 7  = A10;
Pin 8  = A9;
Pin 9  = A8;
Pin 10 = A7;
Pin 11 = R;
Pin 13 = BO2;

/* Outputs:  */
Pin 23 = !PRAM_RD;
Pin 22 = !PRAM_WR;
Pin 21 = !SEL;
Pin 20 = !VRAM_RD;
Pin 19 = !VRAM_WR;
Pin 18 = !ROM_RD;
Pin 17 = !DISP_CS;
Pin 16 = !RBEN;
Pin 15 = D7;
Pin 14 = !BOARDEN;  /* XXX NEEDS BODGE HERE */

/* Set BASEROM_EN to 1 to enable backfilling of ROM slots on
 * the main board. Remove all of the main board ROMs if you
 * set this to 1.
 */

BASEROM_EN = 'b'1;

/* Set PRAM_EN to 1 to enable supplying RAM from 0x1000
 * to 0x7FFF. Motherboard RAM ICs stay in place to supply
 * 0x0000 to 0xFFF.
 */

PRAM_EN = 'b'1;

/* temporarily use D000 instead of 9000 */

ADDR_9XXX = A15 & !A14 & !A13 & A12;
ADDR_VRAM = ADDR_9XXX & !A11;                   /* 9000 to 97FF */
ADDR_IO = ADDR_9XXX & A11 & !A10 & !A9 & !A8;   /* 9800 to 98FF */
ADDR_ROM = ADDR_9XXX & A11 & (A10 # A9 # A8);   /* 9900 to 9FFF */

ADDR_CRTC = ADDR_IO & (!A7);                    /* 9800 to 987F */
ADDR_DISPEN = ADDR_IO & A7;                     /* 9880 to 98FF */

ADDR_BASEROM = (BASEROM_EN & A15 & A14 & A13) #              /* E000 to FFFF */
               (BASEROM_EN & A15 & A14 & !A13 & !A12) #      /* C000 to CFFF */
               (BASEROM_EN & A15 & !A14 & A13 & A12);        /* B000 to BFFF */

ADDR_PRAM = (PRAM_EN & !A15 & A14) #                         /* 4000 to 7FFF */
            (PRAM_EN & !A15 & !A14 & A13) #                  /* 2000 to 3FFF */
            (PRAM_EN & !A15 & !A14 & !A13 & A12);            /* 1000 to 1FFF */

SEL = ADDR_VRAM;
RBEN = ADDR_VRAM & BO2;

PRAM_RD = ADDR_PRAM & R;                   /* doesn't require BO2 because BOARDEN already qualfies that */
PRAM_WR = ADDR_PRAM & !R & BO2;
ROM_RD = (ADDR_ROM # ADDR_BASEROM) & R & BO2;
VRAM_RD = (ADDR_VRAM & R) # (!ADDR_VRAM);  /* doesn't require BO2 because BOARDEN already qualfies that */
VRAM_WR = ADDR_VRAM & !R & BO2;

DISP_CS = ADDR_CRTC;

BOARDEN = BO2 & (ADDR_9XXX # ADDR_BASEROM # ADDR_PRAM);

D7 = DISPEN;
D7.OE = ADDR_DISPEN & R & BO2;